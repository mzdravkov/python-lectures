= slide 'Цели' do
    list:
        Всеки трябва да може да работи независимо от останлите в екипа
        Mалки промени, които се merge-ват възможно най-често (всеки ден)
        Трябва да сме сигурни, че новият код се интегрира добре със съществуващият
        Неработещ код не стига до основният branch на проекта - той трябва винаги да е стабилен (да работи)
        Бърза обратна връзка за проблемни промени в кода
        Често доставяне на нова функционалност
end

= slide 'Проблеми' do
    list:
        Несъвместими промени се правят често
        Как ги откриваме
        Кога разбираме за тях
        Ако проблемният код се използва на много места, отстраняването може да се окаже трудно
end

= slide 'Решения?' do
    list:
        Пишем тестове - unit, integration, functional
        Тестваме ръчно
        Разчитаме, че всеки ще си пусне тестовете
        Разчитаме, че всеки ще тества
end

= slide 'Или пък не...' do
    list:
        Общата отговорност е ничия отговорност - винаги ще се намери някой, който push-ва без да тества
        Няколко души правят промени в няколко различни git branch-а. По отделно работят, но заедно - не.
        Кой ще провери, че крайният продукт работи? Кога? Дали през това време няма да се натрупат още неработещи промени?
end

= slide 'Continuous Integration' do
    p Всяка промяна по основният branch на проекта автоматично се тества
    list:
        Статичен анализ на кода
        Build (компилация и unit тестове)
        Integration тестове
        Автоматично пускане на приложението и автоматизирана проверка, че най-базовата функционалност се държи както очакваме
    p.action Ако дадена промяна не премине валидациите, други промени не се приемат докато проблемът не се отстрани
    p.action Всичко това става автоматично и безусловно за всяка промяна
end

= slide 'Но как?' do
    list:
        <a href="https://travis-ci.org/">Travis</a>
        <a href="https://jenkins.io/">Jenkins</a>
        <a href="https://docs.gitlab.com/ee/ci/introduction/">Gitlab CI / CD</a>
        Други...
end

= slide 'Демо' do
    p <a href="https://github.com/d0ivanov/mr_robot">GitHub</a>
    p <a href="https://travis-ci.com/github/d0ivanov/mr_robot/jobs/299614188">Примерен неуспешен билд</a>
    p Можете да разгледате логът от изпълнението на build-a
    p.action May the demo gods be with us
end

= slide 'Continuous Delivery / Deplyment' do
    p.action Софтуерът работи! Сега какво?
    list:
        Искаме да го deploy-нем с възможно най-малко ръчни стъпки
        Ако се притесняваме какво ще стане, когато deploy-нем - правим нещо грешно
        Трябва да можем да доставяме новият код бързо (в рамките на часове)
    p.action Забележете как това се вписва добре в идеите на Agile Development
end
